{"version":3,"sources":["components/TitleHeader/TitleHeader.js","components/DollarForm/DollarForm.js","components/CoinCountTable/CoinCountTable.js","components/Main/Main.js","index.js"],"names":["TitleHeader","react_default","a","createElement","id","PureComponent","DollarForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","editDollarAmount","bind","assertThisInitialized","getChange","dollar_pattern","RegExp","current_dollar_amount","event","target","dollar_amount","value","trim","valid_dollar_amount","exec","length","console","log","setGlobalState","document","getElementById","onChange","name","type","onClick","CoinCountTable","list_key","coin_count_map","global_state","coin_count_list","map","c","parseFloat","toFixed","key","silver_dollar","half_dollar","quarter","dime","nickel","penny","total_coin_count","last_response_text","Main","state","processRequest","url","URL","window","location","host_array","host","split","server_url","protocol","get_change_url","xhr","XMLHttpRequest","request_count","readyState","status","response","JSON","parse","responseText","new_coin_count_list","push","new_state","setState","is_duplicate","index","coin_count","request","open","send","addEventListener","components_TitleHeader_TitleHeader","components_DollarForm_DollarForm","components_CoinCountTable_CoinCountTable","destination","querySelector","ReactDOM","render","components_Main_Main"],"mappings":"4TAiBeA,gMAVb,OAECC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACPH,EAAAC,EAAAC,cAAA,kCAPsBE,kBCuDXC,qBArDd,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,iBAAmBP,EAAKO,iBAAiBC,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAKU,UAAYV,EAAKU,UAAUF,KAAfP,OAAAQ,EAAA,EAAAR,CAAAD,IAEjBA,EAAKW,eAAiB,IAAIC,OAAQ,mBAClCZ,EAAKa,sBAAwB,GAPXb,gFAWDc,GACjB,IAAIC,EAASD,EAAMC,OACfC,EAAgBD,EAAOE,MAE3BD,EAAgBA,EAAcE,OAC9B,IAAIC,EAAsBhB,KAAKQ,eAAeS,KAAMJ,GAE/CG,GACJJ,EAAOE,MAAQE,EAAoB,GACnChB,KAAKU,sBAAwBM,EAAoB,IAGjDJ,EAAOE,MAAQd,KAAKU,wDAKXC,GAELX,KAAKU,sBAAsBQ,OAAS,IACxCC,QAAQC,IAAKpB,KAAKU,uBAClBV,KAAKJ,MAAMyB,eAAgBrB,KAAKU,uBAChCY,SAASC,eAAgB,gBAAgBT,MAAQ,qCAOlD,OAECxB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACPH,EAAAC,EAAAC,cAAA,SAAOC,GAAG,qBAAV,uCACAH,EAAAC,EAAAC,cAAA,SAAOgC,SAAUxB,KAAKI,iBAAkBX,GAAG,eAAegC,KAAK,eAAeC,KAAK,SACnFpC,EAAAC,EAAAC,cAAA,SAAOkC,KAAK,SAASC,QAAS3B,KAAKO,UAAWd,GAAG,oBAAoBgC,KAAK,oBAAoBX,MAAM,uBA/C/EpB,kBCsDVkC,0LAnDb,IAAIC,EAAW,EAKXC,EAJiB9B,KAAKJ,MAAMmC,aAAaC,gBAAgBC,IAC5D,SAACC,GAAmE,OAA3DA,EAAErB,cAAgBsB,WAAWD,EAAErB,eAAgBuB,QAAQ,GAAWF,IAGxCD,IAAK,SAAEC,GAAF,OACxC5C,EAAAC,EAAAC,cAAA,MAAI6C,IAAKR,KACRvC,EAAAC,EAAAC,cAAA,UAAK0C,EAAErB,eACPvB,EAAAC,EAAAC,cAAA,UAAK0C,EAAEI,eACPhD,EAAAC,EAAAC,cAAA,UAAK0C,EAAEK,aACPjD,EAAAC,EAAAC,cAAA,UAAK0C,EAAEM,SACPlD,EAAAC,EAAAC,cAAA,UAAK0C,EAAEO,MACPnD,EAAAC,EAAAC,cAAA,UAAK0C,EAAEQ,QACPpD,EAAAC,EAAAC,cAAA,UAAK0C,EAAES,OACPrD,EAAAC,EAAAC,cAAA,UAAK0C,EAAEU,qBAIT,OAECtD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,yBACPH,EAAAC,EAAAC,cAAA,MAAIC,GAAG,eAAP,eACAH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBAAR,oBACmBO,KAAKJ,MAAMmC,aAAac,oBAG3CvD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,uBAEPH,EAAAC,EAAAC,cAAA,SAAOC,GAAG,oBACTH,EAAAC,EAAAC,cAAA,MAAIC,GAAG,WACNH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,oBAEAsC,YA1CsBpC,kBCoFdoD,cA/Ed,SAAAA,EAAYlD,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IAClBjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMJ,KAEDmD,MAAQ,CACZf,gBAAiB,GACjBa,mBAAoB,IAGrBhD,EAAKwB,eAAiBxB,EAAKwB,eAAehB,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKmD,eAAiBnD,EAAKmD,eAAe3C,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IAEtB,IAAIoD,EAAM,IAAIC,IAAKC,OAAOC,UACtBC,EAAaJ,EAAIK,KAAKC,MAAM,KAZd,OAalB1D,EAAK2D,WAAaP,EAAIQ,SAAW,KAAOJ,EAAW,GAAK,qBACxDxD,EAAK6D,eAAiB7D,EAAK2D,WAAa,4BACxC3D,EAAK8D,IAAM,IAAIC,eAEf/D,EAAKgE,cAAgB,EAjBHhE,gFAuBjB,GAA6B,IAAxBG,KAAK2D,IAAIG,YAAwC,MAApB9D,KAAK2D,IAAII,OAAiB,CAC3D,IAAIC,EAAWC,KAAKC,MAAOlE,KAAK2D,IAAIQ,cAChCC,EAAsBpE,KAAK+C,MAAMf,gBACrCgC,EAASnD,cAAgBsB,WAAY6B,EAASnD,eAAgBuB,QAAQ,GACtEgC,EAAoBC,KAAML,GAC1B,IAAIM,EAAY,GAChBA,EAAUtC,gBAAkBoC,EAC5BE,EAAUT,gBAAkB7D,KAAK6D,cACjCS,EAAUzB,mBAAqB7C,KAAK2D,IAAIQ,aACxCnE,KAAKuE,SAAUD,2CAIFzD,GACfA,EAAgBsB,WAAYtB,GAAeuB,QAAQ,GACnDjB,QAAQC,IAAK,kBAAoBP,GACjC,IAAI2D,GAAe,EAInB,IAAM,IAAIC,KAFVtD,QAAQC,IAAK,SAAWpB,KAAK+C,MAAMf,iBAEhBhC,KAAK+C,MAAMf,gBAAkB,CAC/C,IAAI0C,EAAa1E,KAAK+C,MAAMf,gBAAgByC,GAG5C,GADAtD,QAAQC,IAAK,MAAQsD,EAAW7D,eAC3BA,GAAiB6D,EAAW7D,cAAgB,CAChDM,QAAQC,IAAK,aACboD,GAAe,EACf,OAKF,IAAK,IAAUA,EAAe,CAC7B,IAAIG,EAAU3E,KAAK0D,eAAiB7C,EACpCb,KAAK2D,IAAIiB,KAAM,MAAOD,GAAS,GAC/B3E,KAAK2D,IAAIkB,OAET7E,KAAK2D,IAAImB,iBAAkB,mBAAoB9E,KAAKgD,gBAAgB,qCAOrE,OAEC1D,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACPH,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACwF,EAAD,CAAY3D,eAAgBrB,KAAKqB,iBACjC/B,EAAAC,EAAAC,cAACyF,EAAD,CAAgBlD,aAAc/B,KAAK+C,gBA1EpBrD,iBCDfwF,EAAc5D,SAAS6D,cAAc,SACzCC,IAASC,OACR/F,EAAAC,EAAAC,cAAC8F,EAAD,MACAJ","file":"static/js/main.e5da1760.chunk.js","sourcesContent":["import React, {PureComponent} from \"react\";\nimport \"./TitleHeader.css\";\n\nclass TitleHeader extends PureComponent {\n\n\trender() {\n\n\t\treturn (\n\n\t\t\t<div id=\"title_header\">\n\t\t\t\t<h2>Change Maker</h2>\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default TitleHeader;\n","import React, {PureComponent} from \"react\";\nimport \"./DollarForm.css\";\n\nclass DollarForm extends PureComponent {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.editDollarAmount = this.editDollarAmount.bind(this);\n\t\tthis.getChange = this.getChange.bind(this);\n\n\t\tthis.dollar_pattern = new RegExp( /(\\d*\\.?\\d{0,2})/ );\n\t\tthis.current_dollar_amount = \"\";\n\n\t}\n\n\teditDollarAmount( event) {\n\t\tvar target = event.target;\n\t\tvar dollar_amount = target.value;\n\n\t\tdollar_amount = dollar_amount.trim();\n\t\tvar valid_dollar_amount = this.dollar_pattern.exec( dollar_amount );\n\n\t\tif ( valid_dollar_amount ) {\n\t\t\ttarget.value = valid_dollar_amount[1];\n\t\t\tthis.current_dollar_amount = valid_dollar_amount[1];\n\t\t\t//console.log( valid_dollar_amount );\n\t\t} else {\n\t\t\ttarget.value = this.current_dollar_amount;\n\t\t}\n\n\t}\n\n\tgetChange( event ) {\n\n\t\tif ( this.current_dollar_amount.length > 0 ) {\n\t\t\tconsole.log( this.current_dollar_amount );\n\t\t\tthis.props.setGlobalState( this.current_dollar_amount );\n\t\t\tdocument.getElementById( \"dollar_input\").value = \"\";\n\t\t}\n\n\t}\n\n\trender() {\n\n\t\treturn (\n\n\t\t\t<div id=\"dollar_container\">\n\t\t\t\t<label id=\"dollar_form_label\">Enter Dollar Amount to get change $</label>\n\t\t\t\t<input onChange={this.editDollarAmount} id=\"dollar_input\" name=\"dollar_input\" type=\"text\"/>\n\t\t\t\t<input type=\"button\" onClick={this.getChange} id=\"get_change_button\" name=\"get_change_button\" value=\"Get Change\"/>\n\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default DollarForm;\n","import React, {PureComponent} from \"react\";\nimport \"./CoinCountTable.css\";\n\nclass CoinCountTable extends PureComponent {\n\n\trender() {\n\t\tvar list_key = 0;\n\t\tvar formatted_list = this.props.global_state.coin_count_list.map(\n\t\t\t(c) => { c.dollar_amount = parseFloat(c.dollar_amount ).toFixed(2); return c; }\n\t\t);\n\n\t\tvar coin_count_map = formatted_list.map (( c ) => \n\t\t\t<tr key={list_key++}>\n\t\t\t\t<td>{c.dollar_amount}</td>\n\t\t\t\t<td>{c.silver_dollar}</td>\n\t\t\t\t<td>{c.half_dollar}</td>\n\t\t\t\t<td>{c.quarter}</td>\n\t\t\t\t<td>{c.dime}</td>\n\t\t\t\t<td>{c.nickel}</td>\n\t\t\t\t<td>{c.penny}</td>\n\t\t\t\t<td>{c.total_coin_count}</td>\n\t\t\t</tr>\n\t\t);\n\n\t\treturn (\n\n\t\t\t<div id=\"coin_counts_container\">\n\t\t\t\t<h3 id=\"coin_counts\">Coin Counts</h3>\n\t\t\t\t<div id=\"server_response\">\n\t\t\t\t\tServer Response: {this.props.global_state.last_response_text}\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"coin_counts_content\">\n\n\t\t\t\t\t<table id=\"coin_count_table\">\n\t\t\t\t\t\t<tr id=\"top_row\">\n\t\t\t\t\t\t\t<td>Dollar Amount</td>\n\t\t\t\t\t\t\t<td>Silver Dollar</td>\n\t\t\t\t\t\t\t<td>Half Dollar</td>\n\t\t\t\t\t\t\t<td>Quarter</td>\n\t\t\t\t\t\t\t<td>Dime</td>\n\t\t\t\t\t\t\t<td>Nickel</td>\n\t\t\t\t\t\t\t<td>Penny</td>\n\t\t\t\t\t\t\t<td>Total</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{coin_count_map}\n\t\t\t\t\t</table>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t);\n\t}\n\n}\n\nexport default CoinCountTable;\n","import React, {PureComponent} from \"react\"\nimport \"./Main.css\"\nimport TitleHeader from \"../TitleHeader/TitleHeader\"\nimport DollarForm from \"../DollarForm/DollarForm\"\nimport CoinCountTable from \"../CoinCountTable/CoinCountTable\"\n\nclass Main extends PureComponent {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tcoin_count_list: [],\n\t\t\tlast_response_text: \"\"\n\t\t}\n\n\t\tthis.setGlobalState = this.setGlobalState.bind(this)\n\t\tthis.processRequest = this.processRequest.bind(this)\n\n\t\tvar url = new URL( window.location )\n\t\tvar host_array = url.host.split(\":\")\n\t\tthis.server_url = url.protocol + \"//\" + host_array[0] + \":8080/ChangeMaker/\"\n\t\tthis.get_change_url = this.server_url + \"/getChange?dollar_amount=\"\n\t\tthis.xhr = new XMLHttpRequest()\n\n\t\tthis.request_count = 0\n\t\t\n\t}\n\n  processRequest() {\n\n\t\t\tif ( this.xhr.readyState === 4 && this.xhr.status === 200 ) {\n\t\t\t\tvar response = JSON.parse( this.xhr.responseText )\n\t\t\t\tvar new_coin_count_list = this.state.coin_count_list\n\t\t\t\tresponse.dollar_amount = parseFloat( response.dollar_amount ).toFixed(2)\n\t\t\t\tnew_coin_count_list.push( response ) \n\t\t\t\tvar new_state = {}\n\t\t\t\tnew_state.coin_count_list = new_coin_count_list\n\t\t\t\tnew_state.request_count = ++this.request_count\n\t\t\t\tnew_state.last_response_text = this.xhr.responseText\n\t\t\t\tthis.setState( new_state )\n\t\t\t}\n\t}\n\n\tsetGlobalState( dollar_amount ) {\n\t\tdollar_amount = parseFloat( dollar_amount).toFixed(2)\n\t\tconsole.log( \"dollar_amount: \" + dollar_amount );\n\t\tvar is_duplicate = false\n\n\t\tconsole.log( \"list: \" + this.state.coin_count_list )\n\n\t\tfor ( var index in this.state.coin_count_list ) {\n\t\t\tvar coin_count = this.state.coin_count_list[index]\n\t\t\t\n\t\t\tconsole.log( \"c: \" + coin_count.dollar_amount )\n\t\t\tif ( dollar_amount == coin_count.dollar_amount ) { \n\t\t\t\tconsole.log( \"duplicate\" )\n\t\t\t\tis_duplicate = true\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t}\n\n\t\tif ( false === is_duplicate ) {\n\t\t\tvar request = this.get_change_url + dollar_amount\n\t\t\tthis.xhr.open( \"GET\", request, true )\n\t\t\tthis.xhr.send()\n\n\t\t\tthis.xhr.addEventListener( \"readystatechange\", this.processRequest, false )\n\t\t}\n\n\t}\n\n\trender() {\n\n\t\treturn (\n\n\t\t\t<div id=\"main_container\">\n\t\t\t\t<TitleHeader/>\n\t\t\t\t<DollarForm setGlobalState={this.setGlobalState}/>\n\t\t\t\t<CoinCountTable global_state={this.state}/>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\nexport default Main\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"\nimport Main from \"./components/Main/Main\";\n\nvar destination = document.querySelector(\"#root\")\nReactDOM.render(\n\t<Main/>,\n\tdestination\n);\n"],"sourceRoot":""}